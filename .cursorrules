# 身份
  你现在是一个全栈工程师，
  前端使用的是antd+react,
  后端使用的是nestjs,
  数据库使用的是mysql,
  电脑是windows系统
  请按照以下规则进行开发：

# 规则
  1. 数据表结构在.table文件中
  2. 后端接口需要加上全局的api前缀
  3. 前端分移动端跟pc端，移动端使用的是antd-mobile,pc端使用的是antd
  4. 前端表格需要居中显示，上方必须有搜索按钮，同时要根据后端的接口来查询对应的数据，如果为空值就展示--
  5. 后端返回的数据格式应该带上code,message,data三个字段
  6. 前端端口号为3000,后端端口号为8080
  7. 数据库是mysql,用户名是root,密码是root,数据库名是bbq_order_system
  8. 要使用jwt进行登录
  9. 对于多角色进行区分，只有顾客，商家两种角色

# 系统整体架构：

  用户端 (顾客):
    浏览商品: 查看商品分类、商品列表、商品详情。
    加入购物车: 将商品加入购物车，可以修改数量。
    下单: 填写用户信息（或使用已注册用户信息）、选择优惠券、确认订单。
    查看订单: 查看历史订单、订单详情。
  管理端 (商家):
    商品管理:
    添加/编辑/删除商品信息。
    管理商品分类。
    查看商品库存和销售情况。
    订单管理(使用websocket实时更新):
    查看所有订单、订单详情。
    可以标记订单状态（例如：待制作、制作中、已完成、已取消）。
    优惠券管理:
    创建/编辑/删除优惠券。
    采购管理:
    添加采购记录，增加商品库存。
    数据统计(使用websocket实时更新):
    查看销售数据、利润数据等。

# 代码规范
  1. 所有代码都要使用typescript进行开发
  2. 所有代码都要使用eslint进行代码检查
  3. 所有代码都要使用prettier进行代码格式化

# 项目目录结构
  1. 前端目录结构
    1. apis 存放api接口
    2. components 存放组件
    3. pages 存放页面
    4. mobile 存放移动端页面
    5. routes 存放路由
    6. store 存放状态管理
    7. styles 存放样式
    8. types 存放类型
    9. utils 存放工具函数
  2. 后端目录结构
    1. controllers 存放控制器
    2. dto 存放数据传输对象
    3. entities 存放实体
    4. middleware 存放中间件
    5. modules 存放模块
    6. services 存放服务
    7. utils 存放工具函数
    8. database 存放数据库
    9. config 存放配置

# 项目风格
  1. 使用暗金色的主题，来作为主色调
  2. 使用浅金色的主题，来作为次色调

# 前端页面
  1. 顾客端
    1. 登录页
    2. 点餐页面
    3. 购物车页面
    4. 订单页面
    5. 优惠卷页面
    6. 我的页面
  2. 商家端
    1. 登录页
    2. 商品管理页面
    3. 商品分类管理页面
    4. 订单管理页面
    5. 优惠卷管理页面
    6. 采购管理页面
    7. 数据统计页面

# 后端接口
  1. 顾客端
    1. 登录接口
    2. 点餐接口
    3. 购物车接口
    4. 订单接口
    5. 优惠卷接口
    6. 我的接口
  2. 商家端
    1. 登录接口
    2. 商品管理接口
    3. 订单管理接口
    4. 优惠卷管理接口
    5. 采购管理接口
    6. 数据统计接口

# 数据库初始值
  管理员账号admin 密码159476(密码使用md5加密)